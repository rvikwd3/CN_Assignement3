//
// Generated file, do not edit! Created by nedtool 5.1 from PacketSize.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __PACKETSIZE_M_H
#define __PACKETSIZE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0501
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>PacketSize.msg:1</tt> by nedtool.
 * <pre>
 * packet PacketSize
 * {
 *     int packet_size = -1;
 *     bool visited_bucket = false;
 *     int packet_source = -1;
 * }
 * </pre>
 */
class PacketSize : public ::omnetpp::cPacket
{
  protected:
    int packet_size;
    bool visited_bucket;
    int packet_source;

  private:
    void copy(const PacketSize& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const PacketSize&);

  public:
    PacketSize(const char *name=nullptr, short kind=0);
    PacketSize(const PacketSize& other);
    virtual ~PacketSize();
    PacketSize& operator=(const PacketSize& other);
    virtual PacketSize *dup() const override {return new PacketSize(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getPacket_size() const;
    virtual void setPacket_size(int packet_size);
    virtual bool getVisited_bucket() const;
    virtual void setVisited_bucket(bool visited_bucket);
    virtual int getPacket_source() const;
    virtual void setPacket_source(int packet_source);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const PacketSize& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, PacketSize& obj) {obj.parsimUnpack(b);}


#endif // ifndef __PACKETSIZE_M_H

